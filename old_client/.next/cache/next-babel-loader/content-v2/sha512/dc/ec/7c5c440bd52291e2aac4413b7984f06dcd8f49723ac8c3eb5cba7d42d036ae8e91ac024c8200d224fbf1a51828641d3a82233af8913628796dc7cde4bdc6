{"ast":null,"code":"import _regeneratorRuntime from \"/Users/davidvega/code/webstarter/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/davidvega/code/webstarter/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Firebase from '../pages/api/auth/firebase';\n\nvar formatAuthUser = function formatAuthUser(user) {\n  return {\n    uid: user.uid,\n    email: user.email\n  };\n};\n\nexport default function useFirebaseAuth() {\n  _s();\n\n  var _useState = useState(null),\n      authUser = _useState[0],\n      setAuthUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var authStateChanged = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authState) {\n      var formattedUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (authState) {\n                _context.next = 4;\n                break;\n              }\n\n              setAuthUser(null);\n              setLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 4:\n              setLoading(true);\n              formattedUser = formatAuthUser(authState);\n              setAuthUser(formattedUser);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function authStateChanged(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // listen for Firebase state change\n\n\n  useEffect(function () {\n    var unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return {\n    authUser: authUser,\n    loading: loading\n  };\n}\n\n_s(useFirebaseAuth, \"QGefB/j9oX4TYsutdTquhksUQuw=\");","map":{"version":3,"sources":["/Users/davidvega/code/webstarter/client/components/useFirebaseAuth.js"],"names":["useState","useEffect","Firebase","formatAuthUser","user","uid","email","useFirebaseAuth","authUser","setAuthUser","loading","setLoading","authStateChanged","authState","formattedUser","unsubscribe","auth","onAuthStateChanged"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAW;AAChCC,IAAAA,GAAG,EAAED,IAAI,CAACC,GADsB;AAEhCC,IAAAA,KAAK,EAAEF,IAAI,CAACE;AAFoB,GAAX;AAAA,CAAvB;;AAKA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAAA,kBACRP,QAAQ,CAAC,IAAD,CADA;AAAA,MACjCQ,QADiC;AAAA,MACvBC,WADuB;;AAAA,mBAEVT,QAAQ,CAAC,IAAD,CAFE;AAAA,MAEjCU,OAFiC;AAAA,MAExBC,UAFwB;;AAIxC,MAAMC,gBAAgB;AAAA,wEAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClBA,SADkB;AAAA;AAAA;AAAA;;AAErBJ,cAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,cAAAA,UAAU,CAAC,KAAD,CAAV;AAHqB;;AAAA;AAOvBA,cAAAA,UAAU,CAAC,IAAD,CAAV;AACIG,cAAAA,aARmB,GAQHX,cAAc,CAACU,SAAD,CARX;AASvBJ,cAAAA,WAAW,CAACK,aAAD,CAAX;AACAH,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAVuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBC,gBAAgB;AAAA;AAAA;AAAA,KAAtB,CAJwC,CAiBxC;;;AACAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,WAAW,GAAGb,QAAQ,CAACc,IAAT,GAAgBC,kBAAhB,CAAmCL,gBAAnC,CAApB;AACA,WAAO;AAAA,aAAMG,WAAW,EAAjB;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAO;AACLP,IAAAA,QAAQ,EAARA,QADK;AAELE,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;;GA3BuBH,e","sourcesContent":["import { useState, useEffect } from 'react'\nimport Firebase from '../pages/api/auth/firebase';\n\nconst formatAuthUser = (user) => ({\n  uid: user.uid,\n  email: user.email,\n});\n\nexport default function useFirebaseAuth() {\n  const [authUser, setAuthUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const authStateChanged = async (authState) => {\n    if (!authState) {\n      setAuthUser(null);\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    var formattedUser = formatAuthUser(authState);\n    setAuthUser(formattedUser);\n    setLoading(false);\n  };\n\n  // listen for Firebase state change\n  useEffect(() => {\n    const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\n    return () => unsubscribe();\n  }, []);\n\n  return {\n    authUser,\n    loading,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}