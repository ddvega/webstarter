{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/davidvega/code/webstarter/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/davidvega/code/webstarter/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/davidvega/code/webstarter/client/store/users/AuthContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from '../../authentication/firebase';\nimport { postURL } from '../../api/PostURL';\nvar AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n} // https://www.youtube.com/watch?v=qWy9ylc3f9U\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState(),\n      currentUser = _useState[0],\n      setCurrentUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      token = _useState3[0],\n      setToken = _useState3[1]; // this a global API with auth token baked in - this way we can track the user\n  // this is going to add a user to firebase auth as well as use the credential or uid created by firebase auth to\n  // add the user to firestore. The postURL function acts as a form of frontend middleware (maybe?) between the\n  // frontend and backend.\n\n\n  function signup(_x, _x2, _x3) {\n    return _signup.apply(this, arguments);\n  }\n\n  function _signup() {\n    _signup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(uname, uemail, password) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", firebase.createUserWithEmailAndPassword(uemail, password).then(function (cred) {\n                return postURL('/api/users', {\n                  uid: cred.user.uid,\n                  username: uname,\n                  email: uemail\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _signup.apply(this, arguments);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function loginWithGoogle() {\n    return _loginWithGoogle.apply(this, arguments);\n  }\n\n  function _loginWithGoogle() {\n    _loginWithGoogle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", auth.signInWithPopup(googleProvider).then(function (cred) {\n                postURL('/api/users', {\n                  uid: cred.user.uid,\n                  username: cred.user.displayName,\n                  email: cred.user.email,\n                  picture: cred.user.photoURL\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _loginWithGoogle.apply(this, arguments);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(function () {\n    auth.onAuthStateChanged( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var newToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!user) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 3;\n                return user.getIdToken();\n\n              case 3:\n                newToken = _context.sent;\n                setToken(newToken);\n                _context.next = 8;\n                break;\n\n              case 7:\n                setToken('');\n\n              case 8:\n                setCurrentUser(user);\n                setLoading(false);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }, []);\n  var value = {\n    currentUser: currentUser,\n    login: login,\n    loginWithGoogle: loginWithGoogle,\n    signup: signup,\n    logout: logout,\n    resetPassword: resetPassword,\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    token: token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(AuthProvider, \"HVUoeoStFlvr+KDap3gw/NXPZQo=\");\n\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/davidvega/code/webstarter/client/store/users/AuthContext.jsx"],"names":["React","useContext","useState","useEffect","createContext","PropTypes","firebase","postURL","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","token","setToken","signup","uname","uemail","password","createUserWithEmailAndPassword","then","cred","uid","user","username","email","login","auth","signInWithEmailAndPassword","loginWithGoogle","signInWithPopup","googleProvider","displayName","picture","photoURL","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","onAuthStateChanged","getIdToken","newToken","value","propTypes","node","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,IAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEA,OAAO,SAASK,OAAT,GAAmB;AAAA;;AACxB,SAAOR,UAAU,CAACO,WAAD,CAAjB;AACD,C,CAED;;GAJgBC,O;;AAKhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACHT,QAAQ,EADL;AAAA,MAClCU,WADkC;AAAA,MACrBC,cADqB;;AAAA,mBAEXX,QAAQ,CAAC,IAAD,CAFG;AAAA,MAElCY,OAFkC;AAAA,MAEzBC,UAFyB;;AAAA,mBAGfb,QAAQ,CAAC,EAAD,CAHO;AAAA,MAGlCc,KAHkC;AAAA,MAG3BC,QAH2B,kBAMzC;AACA;AACA;AACA;;;AATyC,WAU1BC,MAV0B;AAAA;AAAA;;AAAA;AAAA,uEAUzC,kBAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gDACSf,QAAQ,CAACgB,8BAAT,CAAwCF,MAAxC,EAAgDC,QAAhD,EAA0DE,IAA1D,CAA+D,UAACC,IAAD;AAAA,uBACpEjB,OAAO,CAAC,YAAD,EAAe;AACpBkB,kBAAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUD,GADK;AAEpBE,kBAAAA,QAAQ,EAAER,KAFU;AAGpBS,kBAAAA,KAAK,EAAER;AAHa,iBAAf,CAD6D;AAAA,eAA/D,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVyC;AAAA;AAAA;;AAoBzC,WAASS,KAAT,CAAeD,KAAf,EAAsBP,QAAtB,EAAgC;AAC9B,WAAOS,IAAI,CAACC,0BAAL,CAAgCH,KAAhC,EAAuCP,QAAvC,CAAP;AACD;;AAtBwC,WAwB1BW,eAxB0B;AAAA;AAAA;;AAAA;AAAA,gFAwBzC;AAAA;AAAA;AAAA;AAAA;AAAA,gDACSF,IAAI,CAACG,eAAL,CAAqBC,cAArB,EAAqCX,IAArC,CAA0C,UAACC,IAAD,EAAU;AACzDjB,gBAAAA,OAAO,CAAC,YAAD,EAAe;AACpBkB,kBAAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUD,GADK;AAEpBE,kBAAAA,QAAQ,EAAEH,IAAI,CAACE,IAAL,CAAUS,WAFA;AAGpBP,kBAAAA,KAAK,EAAEJ,IAAI,CAACE,IAAL,CAAUE,KAHG;AAIpBQ,kBAAAA,OAAO,EAAEZ,IAAI,CAACE,IAAL,CAAUW;AAJC,iBAAf,CAAP;AAMD,eAPM,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxByC;AAAA;AAAA;;AAmCzC,WAASC,MAAT,GAAkB;AAChB,WAAOR,IAAI,CAACS,OAAL,EAAP;AACD;;AAED,WAASC,aAAT,CAAuBZ,KAAvB,EAA8B;AAC5B,WAAOE,IAAI,CAACW,sBAAL,CAA4Bb,KAA5B,CAAP;AACD;;AAED,WAASc,WAAT,CAAqBd,KAArB,EAA4B;AAC1B,WAAOhB,WAAW,CAAC8B,WAAZ,CAAwBd,KAAxB,CAAP;AACD;;AAED,WAASe,cAAT,CAAwBtB,QAAxB,EAAkC;AAChC,WAAOT,WAAW,CAAC+B,cAAZ,CAA2BtB,QAA3B,CAAP;AACD;;AAEDlB,EAAAA,SAAS,CAAC,YAAM;AACd2B,IAAAA,IAAI,CAACc,kBAAL;AAAA,2EAAwB,iBAAOlB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAClBA,IADkB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEGA,IAAI,CAACmB,UAAL,EAFH;;AAAA;AAEdC,gBAAAA,QAFc;AAGpB7B,gBAAAA,QAAQ,CAAC6B,QAAD,CAAR;AAHoB;AAAA;;AAAA;AAKpB7B,gBAAAA,QAAQ,CAAC,EAAD,CAAR;;AALoB;AAOtBJ,gBAAAA,cAAc,CAACa,IAAD,CAAd;AACAX,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AARsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;;AAAA;AAAA;AAAA;AAAA;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,MAAMgC,KAAK,GAAG;AACZnC,IAAAA,WAAW,EAAXA,WADY;AAEZiB,IAAAA,KAAK,EAALA,KAFY;AAGZG,IAAAA,eAAe,EAAfA,eAHY;AAIZd,IAAAA,MAAM,EAANA,MAJY;AAKZoB,IAAAA,MAAM,EAANA,MALY;AAMZE,IAAAA,aAAa,EAAbA,aANY;AAOZE,IAAAA,WAAW,EAAXA,WAPY;AAQZC,IAAAA,cAAc,EAAdA,cARY;AASZ3B,IAAAA,KAAK,EAALA;AATY,GAAd;AAYA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE+B,KAA7B;AAAA,cAAqC,CAACjC,OAAD,IAAYH;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IA7EeD,Y;;KAAAA,Y;AA+EhBA,YAAY,CAACsC,SAAb,GAAyB;AACvBrC,EAAAA,QAAQ,EAAEN,SAAS,CAAC4C,IAAV,CAAeC;AADF,CAAzB","sourcesContent":["import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from '../../authentication/firebase';\nimport { postURL } from '../../api/PostURL';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\n// https://www.youtube.com/watch?v=qWy9ylc3f9U\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState('');\n  \n\n  // this a global API with auth token baked in - this way we can track the user\n  // this is going to add a user to firebase auth as well as use the credential or uid created by firebase auth to\n  // add the user to firestore. The postURL function acts as a form of frontend middleware (maybe?) between the\n  // frontend and backend.\n  async function signup(uname, uemail, password) {\n    return firebase.createUserWithEmailAndPassword(uemail, password).then((cred) =>\n      postURL('/api/users', {\n        uid: cred.user.uid,\n        username: uname,\n        email: uemail,\n      }),\n    );\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  async function loginWithGoogle() {\n    return auth.signInWithPopup(googleProvider).then((cred) => {\n      postURL('/api/users', {\n        uid: cred.user.uid,\n        username: cred.user.displayName,\n        email: cred.user.email,\n        picture: cred.user.photoURL,\n      });\n    });\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const newToken = await user.getIdToken();\n        setToken(newToken);\n      } else {\n        setToken('');\n      }\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    loginWithGoogle,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    token,\n  };\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\n}\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}